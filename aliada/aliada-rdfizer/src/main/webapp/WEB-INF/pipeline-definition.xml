<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="startup_listener" class="eu.aliada.rdfizer.listeners.PipelineStartupListener" />
	<bean id="shutdown_listener" class="eu.aliada.rdfizer.listeners.PipelineShutdownListener" />
	<bean id="debugger" class="eu.aliada.rdfizer.pipeline.processors.JustDebug"/> 
	<bean id="xpath" class="eu.aliada.rdfizer.pipeline.format.xml.XPath"/> 
	<bean id="function" class="eu.aliada.rdfizer.Function"/>
	<bean id="string-to-xml" class="eu.aliada.rdfizer.pipeline.format.xml.XmlRecordToDocumentTranslator" />
	<bean id="xml-to-rdf" class="eu.aliada.rdfizer.pipeline.format.xml.SynchXmlDocumentTranslator"/>
	<bean id="marcxml-to-rdf-using-frbr" class="eu.aliada.rdfizer.pipeline.format.marc.frbr.FrbrDocumentTranslator"/>
	<bean id="detect-frbr-entities" class="eu.aliada.rdfizer.pipeline.format.marc.frbr.FrbrEntitiesDetector" />	
	<bean id="count-lido-records" class="eu.aliada.rdfizer.pipeline.format.xml.RecordCounter">
		<constructor-arg value="lido"/>
	</bean>	
	<bean id="count-marcxml-records" class="eu.aliada.rdfizer.pipeline.format.xml.RecordCounter">
		<constructor-arg value="record"/>
	</bean>		
	<camelContext xmlns="http://camel.apache.org/schema/spring" trace="true" >
		<route>
			<from uri="file:{{lido.input.dir}}?move=../.done&amp;preMove=.working" />
			<setHeader headerName="format">
				<constant>lido</constant>
			</setHeader>
			<to uri="direct:sanity-check-channel" />
		</route>
		<route>
			<from uri="file:{{marcxml.input.dir}}?move=../.done&amp;preMove=.working" />
			<setHeader headerName="format">
				<constant>marcxml</constant>
			</setHeader>
			<to uri="direct:sanity-check-channel" />
		</route>
		<route>
			<from uri="direct:sanity-check-channel" />
			<process ref="validate_input_path" />
			<to uri="direct:records-channel" />
		</route>
		<route>
			<from uri="direct:records-channel" />
			<choice>
				<when>
					<simple>${header.format} == 'lido'</simple>
					<process ref="count-lido-records"/>
					<split streaming="true">
						<tokenize token="lido" xml="true" />
						<to uri="seda:lido-record-channel?concurrentConsumers=2&amp;size=1000&amp;blockWhenFull=true" />
					</split>
				</when>
				<when>
					<simple>${in.header.format} == 'marcxml'</simple>
					<process ref="count-marcxml-records"/>
					<split streaming="true">
						<tokenize token="record" xml="true" />
						<to uri="seda:marcxml-record-channel?concurrentConsumers=2&amp;size=1000&amp;blockWhenFull=true" />
					</split>
				</when>
				<otherwise>
					<log message="&lt;RDF-IZER-00023> : Unsupported format has been detected in input datafile." loggingLevel="ERROR" logName="eu.aliada.pipeline"/>			    
				</otherwise>		
			</choice>	
		</route>
		<route>
			<from uri="seda:lido-record-channel?concurrentConsumers=2&amp;size=1000&amp;blockWhenFull=true" />
			<process ref="string-to-xml"/>
			<process ref="xml-to-rdf"/>
			<to uri="seda:triples-channel?size=250&amp;blockWhenFull=true" />
		</route>
		<route>
			<from uri="seda:marcxml-record-channel?concurrentConsumers=2&amp;size=1000&amp;blockWhenFull=true" />
			<process ref="string-to-xml"/>
			<process ref="detect-frbr-entities"/>
			<process ref="marcxml-to-rdf-using-frbr"/>
			<to uri="seda:triples-channel?size=250&amp;blockWhenFull=true" />
		</route>
		<route>
			<from uri="seda:triples-channel?size=250&amp;blockWhenFull=true" />
			<process ref="debugger"/>
		</route>
	</camelContext>
	
	
</beans>
