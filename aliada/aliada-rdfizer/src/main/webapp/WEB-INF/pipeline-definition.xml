<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="  
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <bean id="validate_input_path" class="eu.aliada.rdfizer.pipeline.processors.ValidateInputPath" /> 
	<bean id="startup_listener" class="eu.aliada.rdfizer.listeners.PipelineStartupListener" />
	<bean id="shutdown_listener" class="eu.aliada.rdfizer.listeners.PipelineShutdownListener" />
	<bean id="debugger" class="eu.aliada.rdfizer.pipeline.processors.JustDebug"/> 
	<bean id="count-debugger" class="eu.aliada.rdfizer.pipeline.processors.JustDebugTriplesCount"/>
	<bean id="no-op" class="eu.aliada.rdfizer.pipeline.processors.NoOp"/>
	<bean id="add-2-rdf-store" class="eu.aliada.rdfizer.pipeline.processors.AddToRDFStore">
	    <constructor-arg value="http://localhost:9999/blazegraph/namespace/aliada/sparql"/>
	    <constructor-arg value="1000"/>
	    <constructor-arg value="-1"/>
	</bean>
	<bean id="check-job-completeness" class="eu.aliada.rdfizer.pipeline.processors.CheckJobCompleteness"/>
	<bean id="xpath" class="eu.aliada.rdfizer.pipeline.format.xml.XPath"/> 
	<bean id="rdf-sample-validation" class="eu.aliada.rdfizer.pipeline.processors.Validator"/>
	<bean id="function" class="eu.aliada.rdfizer.Function"/>
	<bean id="string-to-xml" class="eu.aliada.rdfizer.pipeline.format.xml.XmlRecordToDocumentTranslator" />
	<bean id="xml-to-rdf" class="eu.aliada.rdfizer.pipeline.format.xml.SynchXmlDocumentTranslator"/>
	<bean id="marcxml-to-rdf-using-frbr" class="eu.aliada.rdfizer.pipeline.format.marc.frbr.FrbrDocumentTranslator"/>
	<bean id="detect-frbr-entities" class="eu.aliada.rdfizer.pipeline.format.marc.frbr.FrbrEntitiesDetector" />
	<bean id="detect-auth-entities" class="eu.aliada.rdfizer.pipeline.format.marc.frbr.LenientFrbrEntitiesDetector"/>
	<bean id="run-marcxml-validation" class="eu.aliada.rdfizer.pipeline.format.xml.CaptureValidationSampleAndRunValidation">
		<constructor-arg value="record"/>
		<constructor-arg value="1"/>
		<property name="producer" ref="marcxml-validation-channel-producer"/>
	</bean>			
	<bean id="count-marcxml-records" class="eu.aliada.rdfizer.pipeline.format.xml.RecordCounter">
		<constructor-arg value="record"/>
	</bean>		
	<camelContext xmlns="http://camel.apache.org/schema/spring" trace="true" >
		<properties>
        	<property key="CamelLogDebugBodyMaxChars" value="500"/>
   		</properties>	
		<template id="marcxml-validation-channel-producer" defaultEndpoint="direct:marcxml-validation-channel"/>
		<route>
			<from uri="file:{{unimarcxml.input.dir}}?move=../.done&amp;preMove=.working" />
			<setHeader headerName="format">
				<constant>unimarcxml</constant>
			</setHeader>
			<to uri="seda:sanity-check-channel?concurrentConsumers=5&amp;size=1000&amp;blockWhenFull=true" />
		</route>
		<route>
			<from uri="seda:sanity-check-channel?concurrentConsumers=5&amp;size=1000&amp;blockWhenFull=true" />
			<process ref="validate_input_path" />
			<to uri="seda:records-channel?concurrentConsumers=5&amp;size=1000&amp;blockWhenFull=true" />
		</route>
		<route>
			<from uri="seda:records-channel?concurrentConsumers=5&amp;size=1000&amp;blockWhenFull=true" />
			<choice>
				<when>
					<simple>${in.header.format} == 'unimarcxml'</simple>
					<process ref="count-marcxml-records"/>
					<process ref="run-marcxml-validation"/>
					<split streaming="true">
						<tokenize token="record" xml="true" />
						<to uri="seda:marcxml-record-channel?concurrentConsumers=5&amp;size=1000&amp;blockWhenFull=true" />
					</split>
				</when>		
				<otherwise>
					<log message="&lt;RDF-IZER-00023> : Unsupported format has been detected in input datafile." loggingLevel="ERROR" logName="eu.aliada.pipeline"/>			    
				</otherwise>		
			</choice>	
		</route>
		<route>
			<from uri="direct:marcxml-validation-channel"/>
			<process ref="string-to-xml"/>
			<process ref="detect-frbr-entities"/>
			<process ref="marcxml-to-rdf-using-frbr"/>
			<process ref="rdf-sample-validation"/>
		</route>		
		<route>
			<from uri="seda:marcxml-record-channel?concurrentConsumers=5&amp;size=1000&amp;blockWhenFull=true" />
			<process ref="string-to-xml"/>
			<process ref="detect-frbr-entities"/>
			<process ref="marcxml-to-rdf-using-frbr"/>
			<process ref="check-job-completeness"/>
			<to uri="seda:triples-channel?concurrentConsumers=10&amp;size=250&amp;blockWhenFull=true" />
		</route>
		<route> 
			<from uri="seda:triples-channel?concurrentConsumers=10&amp;size=250&amp;blockWhenFull=true" />
			<process ref="add-2-rdf-store"/>
<!-- 			<process ref="debugger"/> -->
		</route>
	</camelContext>
</beans>